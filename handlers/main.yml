---

- name: reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: check if filebeat is active
  command: systemctl is-active filebeat
  register: filebeat_check
  changed_when: false
  ignore_errors: true

- name: reload filebeat
  ansible.builtin.systemd:
    name: filebeat 
    state: restarted
  when: filebeat_check.rc == 0 and filebeat_service is defined and not filebeat_service.changed

- name: check if heartbeat is active
  command: systemctl is-active heartbeat
  register: heartbeat_check
  changed_when: false
  ignore_errors: true

- name: reload heartbeat
  ansible.builtin.systemd:
    name: heartbeat 
    state: restarted
  when: heartbeat_check.rc == 0 and heartbeat_service is defined and not heartbeat_service.changed

- name: check if metricbeat is active
  command: systemctl is-active metricbeat
  register: metricbeat_check
  changed_when: false
  ignore_errors: true

- name: reload metricbeat
  ansible.builtin.systemd:
    name: metricbeat 
    state: restarted
  when: metricbeat_check.rc == 0 and metricbeat_service is defined and not metricbeat_service.changed

- name: check if elasticsearch is active
  command: systemctl is-active elasticsearch
  register: elasticsearch_check
  changed_when: false
  ignore_errors: true

- name: restart elasticsearch
  ansible.builtin.systemd:
    name: elasticsearch
    state: restarted
  when: elasticsearch_check.rc == 0 and elastic_service is defined and not elastic_service.changed # rc (return code) is 0 when the service is active

- name: wait elasticsearch to be ready
  ansible.builtin.uri:
    url: "{{ virtual_proto }}://localhost:9200"
    status_code: 200
    user: elastic
    password: "{{ elasticsearch_users['elastic']['password'] }}"
    method: GET
    force_basic_auth: yes
    validate_certs: no
  register: result
  until: result.status == 200
  retries: 30
  delay: 20

- name: check if logstash is active
  command: systemctl is-active logstash
  register: logstash_check
  changed_when: false
  ignore_errors: true

- name: restart logstash
  ansible.builtin.systemd:
    name: logstash
    state: restarted
  when: logstash_check.rc == 0 and logstash_service is defined and not logstash_service.changed  # rc (return code) is 0 when the service is active

- name: check if kibana is active
  command: systemctl is-active kibana
  register: kibana_check
  changed_when: false
  ignore_errors: true

- name: restart kibana
  ansible.builtin.systemd:
    name: kibana
    state: restarted
  when: kibana_check.rc == 0 and kibana_service is defined and not kibana_service.changed # rc (return code) is 0 when the service is active
  
- name: wait kibana to be ready
  ansible.builtin.uri:
    url: "{{ kibana_virtual_proto }}://localhost:{{ kibana_port }}"
    status_code: 200
    follow_redirects: safe
  register: result
  until: result.status == 200
  retries: 30
  delay: 20

- name: Reload Nginx
  systemd:
    name: nginx
    state: reloaded