#!/usr/bin/env python3
import requests
import phpserialize
import json
from pprint import pprint


class serverList():
    def __init__(self):
        self.url = "http://api.kongor.online/client_requester.php?f=server_list"
        self.data = {
            "gametype" : "90",
            "cookie" : "123"
        }
        self.server_dict = {}

    def decode_dict(self, data):
         if isinstance(data, dict):
             return {str(k.decode() if isinstance(k, bytes) else k): self.decode_dict(v) for k, v in data.items()}
         if isinstance(data, list):
             return [self.decode_dict(item) for item in data]
         if isinstance(data, bytes):
             return data.decode()
         return data

    def _post(self, data):
        response = requests.post(self.url, data = data)
        return self.decode_dict(phpserialize.loads(response.content))

    def get_server_dict(self):
        server_info_addition = self._post(self.data)

        data = self.data
        data["region"] = "AUTO"
        server_available = self._post(data)

        for key, value in server_available.get("server_list", {}).items():
            temp = {value["server_id"] : {
                "c_state" : value["c_state"],
                "ip" : value["ip"],
                "name" : value["location"]
            }}
            self.server_dict.update(temp)

        for key, value in server_info_addition.get('server_list', {}).items():
            for k, v in self.server_dict.items():
                if v['ip'] == value['ip'] and value.get('location', None):
                    self.server_dict[k]['location'] = value['location']

        print("Server list:")
        for k, v in self.server_dict.items():
            #print(f'Name: {v["name"][:-2]}, Location: {v.get("location", "Offline")}, IP: {v["ip"]}, ID: {k}')
            print(f'Name: {v["name"][:-2]}, Location: {v.get("location", "Offline")}')

    def get_available_servers(self):
        available_servers = []
        for region in ["EU", "SEA", "USE", "USW", "BR", "TH", "NEWERTH", "AU", "RU"]:
            data = self.data
            data["region"] = region
            x = self._post(data).get("server_list")
            available_servers.append({"region": region, "count": len(x)})

        print(json.dumps(available_servers))


x = serverList()
x.get_available_servers()