input {
  {% for topic in logstash_mqtt_topics %}
  mqtt {
    host => "{{ logstash_mqtt_host }}"
    port => {{ logstash_mqtt_ssl_port }}
    logfile => "/tmp/mqtt.log"
    topic => "{{ topic }}"
    qos => 1
    type => "mqtt"
    clean_session => true
    ssl => true
    certificate_path => "{{ logstash_certs_dir }}/{{ logstash_mqtt_client_cert }}"
    key_path => "{{ logstash_certs_dir }}/{{ logstash_mqtt_client_key }}"
    root_ca_path => "{{ logstash_certs_dir }}/ca/{{ logstash_mqtt_intermediate_cert }}"
  }
  {% endfor %}
}

filter {
  if [type] == "mqtt" {
    json {
      source => "message"
    }
    date {
      match => ["timestamp", "YYYY-MM-dd HH:mm:ss"]
      target => "@timestamp"
      tag_on_failure => "_dateparsefailure"
    }
    mutate {
      remove_field => ["message", "timestamp"]
    }
  }
}

output {
  if [type] == "mqtt" {
    elasticsearch {
      hosts => [{% for host in elasticsearch_hosts %}"https://{{ host }}:9200"{% if not loop.last %}, {% endif %}{% endfor %}]
      index => "mqtt"
      ssl_certificate_authorities => "{{ logstash_certs_dir }}/ca/{{ elasticsearch_ca_chain_name }}"
      user => "${ES_USER}"
      password => "${ES_PWD}"
      action => "create"
    }
  }
}