- name: Check for any indexes behind the alias template {{ alias_template_item }}
  uri:
    url: "{{ virtual_proto }}://{{ elasticsearch_http_host | default('localhost') }}:{{ elasticsearch_http_port }}/_alias/{{ alias_template_item | basename | regex_replace('\\.json\\.j2$', '') }}"
    user: elastic
    password: "{{ elasticsearch_users['elastic']['password'] }}"
    method: GET
    # Expecting 200 if the alias exists, regardless of whether it has indices.
    # A 404 would mean the alias itself does not exist.
    status_code: 200,404  
    return_content: yes
    validate_certs: no
  register: alias_check
  ignore_errors: yes  # To proceed even if 404 not found
  with_fileglob:
    - "{{ role_path }}/templates/index-aliases/*.json.j2"
  loop_control:
    loop_var: alias_template_item
  delegate_to: localhost

- debug:
    var: alias_check

- set_fact:
    indexes_exist: false

- name: Determine if any indexes exist behind the alias
  set_fact:
    indexes_exist: "{{ (alias_check.content | from_json).keys() | list | length > 0 }}"
  when: alias_check.results.0.status == 200

- name: Create index for alias template {{ alias_template_item }} if it does not exist
  uri:
    url: "{{ virtual_proto }}://{{ elasticsearch_http_host | default('localhost') }}:{{ elasticsearch_http_port }}/{{ alias_template_item | basename | regex_replace('\\.json\\.j2$', '') }}-000001"
    user: elastic
    password: "{{ elasticsearch_users['elastic']['password'] }}"
    method: PUT
    body: "{{ lookup('template', alias_template_item) }}"
    body_format: json
    status_code: 200
    validate_certs: no
  when: not indexes_exist
  with_fileglob:
    - "{{ role_path }}/templates/index-aliases/*.json.j2"
  loop_control:
    loop_var: alias_template_item
  delegate_to: localhost
