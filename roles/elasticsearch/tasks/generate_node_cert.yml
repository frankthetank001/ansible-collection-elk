---

- name: CA exists
  stat:
    path: "{{ elasticsearch_certs_dir}}/{{ elasticsearch_ca_filename }}"
  register: ca_file

- name: cert exists
  stat:
    path: "{{ elasticsearch_certs_dir}}/{{ elasticsearch_cert_filename }}"
  register: cert_file

- name: Get issuer of the certificate
  shell: openssl pkcs12 -in {{ elasticsearch_certs_dir}}/{{ elasticsearch_cert_filename }} -passin pass:{{ elasticsearch_cert_password }} -nokeys -clcerts | openssl x509 -noout -issuer
  register: cert_issuer
  changed_when: false
  ignore_errors: true
  when: cert_file.stat.exists and ca_file.stat.exists

- name: Get subject of the CA
  shell: openssl pkcs12 -in {{ elasticsearch_certs_dir}}/{{ elasticsearch_ca_filename }} -passin pass:{{ elasticsearch_ca_password }} -nokeys -clcerts | openssl x509 -noout -subject
  register: ca_subject
  changed_when: false
  ignore_errors: true
  when: cert_file.stat.exists and ca_file.stat.exists

- name: Set fact for cert issued by CA
  set_fact:
    cert_issued_by_ca: "{{ cert_issuer.stdout == ca_subject.stdout }}"
  when: 
    - cert_issuer.stdout is defined 
    - ca_subject.stdout is defined

- name: Copy elasticsearch CA
  ansible.builtin.copy:
    src: "{{ elasticsearch_local_certs_dir }}/{{ elasticsearch_ca_filename }}"
    dest: "{{ elasticsearch_certs_dir }}/{{ elasticsearch_ca_filename }}"
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
    mode: 0644
  when: not ca_file.stat.exists or not cert_issued_by_ca
  
- name: Remove existing node cert if not issued by correct CA
  ansible.builtin.file:
    path: "{{ elasticsearch_certs_dir}}/{{ elasticsearch_cert_filename }}"
    state: absent
  when: cert_file.stat.exists and not cert_issued_by_ca

- name: generate node cert
  ansible.builtin.command: > 
    {{ elasticsearch_extract_dir }}/elasticsearch/bin/elasticsearch-certutil
    cert --ca {{ elasticsearch_certs_dir}}/{{ elasticsearch_ca_filename }} --ca-pass {{ elasticsearch_ca_password }} 
    --out {{ elasticsearch_certs_dir}}/{{ elasticsearch_cert_filename }} --pass {{ elasticsearch_cert_password }}
  when:
    - not cert_file.stat.exists or not cert_issued_by_ca
  notify:
    - check if elasticsearch is active
    - restart elasticsearch
    - wait elasticsearch to be ready

- name: Fix cert permission
  ansible.builtin.file:
    path: "{{ elasticsearch_certs_dir}}/{{ elasticsearch_cert_filename }}"
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
    mode: 0644